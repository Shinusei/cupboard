plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2' apply false
}

var ENV = System.getenv()

if (ENV.MCMC_BUILD_NUMBER) {
    version = "${mod_version}.${ENV.MCMC_BUILD_NUMBER}"
} else {
    version = project.minecraft_version + "-" + project.mod_version
}

group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/${project.archives_base_name}.accessWidener")
}

repositories {
    mavenLocal()
    flatDir { dirs 'libs' }
    mavenCentral()

    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

loom {
    runs {
        client {
            programArg '--username=Dev'
            programArg '--uuid=ab0bd857-3862-4ad1-b53e-9d76086f2e21'
            vmArg '-Dmixin.debug=true'
        }
        server {
            runDir = "runserver"
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    def javaVersion = JavaVersion.toVersion(JavaVersion.VERSION_21)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaVersion.VERSION_21
    }
    archivesBaseName =  project.archives_base_name + "-fabric"
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}


publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
}
